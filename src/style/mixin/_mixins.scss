// written by Shani 
// if need any change here please discuss with me once.

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// css3 browser vender prefix mixin
@mixin prefix($property, $value, $vendors: webkit moz ms o) {
    @if $vendors {
        @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $property}: #{$value};
        }
    }
    #{$property}: #{$value};
}


// Viewport-width unit function 
@function vw($count-width, $viewport-width, $unit:vw) {
    $return: $count-width /($viewport-width / 100);
    @return $return+$unit;
}


// Positional mixins 
@mixin pos($pos:static, $top:null, $right:null, $bottom:null, $left:null, $z-index:null) {
    @if (($pos==relative) or ($pos==re)) {
        position: relative;
    }
    @else if (($pos==absolute) or ($pos==ab)) {
        position: absolute;
    }
    @else if (($pos==fixed) or ($pos==fi)) {
        position: fixed;
    }
    @else if ($pos==static) {
        position: static;
    }
    top:$top;
    right:$right;
    bottom:$bottom;
    left:$left;
    z-index:$z-index;
}

// Dispaly mixins
@mixin dis($maxw:null, $w:null, $dis:null, $m:0 auto) {
    @if (($dis==block) or ($dis==table)) {
        display: $dis;
        margin: $m;
    }
    @if (($dis==none) or ($dis==null)) {
        display: $dis;
    }
    @else if (($dis==inline-block)) {
        display: $dis;
        vertical-align: top;
    }
    @else if (($dis==left) or ($dis==right)) {
        float: $dis;
        margin: $m;
    }
    max-width: $maxw;
    width: $w;
}

// Responsive iframe mixins
@mixin maintain-ratio($ratio: 1 1, $dis: null, $maxw: null, $m:0 auto) {
    @if length($ratio) < 2 or length($ratio)>2 {
        @warn "$ratio must be a list with two values.";
    }
    $height: percentage(nth($ratio, 2) / nth($ratio, 1));
    @if (($dis==block) or ($dis==table)) {
        display: $dis;
        margin: $m;
    }
    @else if ($dis==inline-block) {
        display: $dis;
        vertical-align: top;
    }
    @else if (($dis==left) or ($dis==right)) {
        float: $dis;
        margin: $m;
    }
    width: 100%;
    max-width: $maxw;
    overflow: hidden;
    position: relative;
    &:before {
        content: '';
        clear: both;
        display: block;
        width: 100%;
        padding-bottom: $height;
        height: 0px;
    }
    >iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100% !important;
        height: 100% !important;
        background: #000;
    }
}

// bg-ratio mixins as per image
@mixin bg-ratio($ratio: 1 1,$align:center,$z:99) {
    @if length($ratio) < 2 or length($ratio)>2 {
        @warn "$ratio must be a list with two values.";
    }
    $height: percentage(nth($ratio, 2) / nth($ratio, 1));
    &:before {
        content: '';
        display: block;
        width: 100%;
        padding-bottom: $height;
    }
    @if ($align !=null) {
        overflow: hidden;
        position: relative;
        >* {
            @if ($align==center) {
                @include pos(ab, 50%, null, null, 50%, $z);
                @include prefix(transform, translate(-50%, -50%), webkit ms);
            }
            @else if ($align==center-top) {
                @include pos(ab, 0, 0, null, 0, $z);
            }
            @else if ($align==center-bottom) {
                @include pos(ab, null, 0, 0, 0, $z);
            }
            @else if ($align==center-left) {
                @include pos(ab, 50%, null, null, 0, $z);
                @include prefix(transform, translateY(-50%), webkit ms);
            }
            @else if ($align==center-right) {
                @include pos(ab, 50%, 0, null, null, $z);
                @include prefix(transform, translateY(-50%), webkit ms);
            }
            @else if ($align==left-top) {
                @include pos(ab, 0, null, null, 0, $z);
            }
            @else if ($align==left-bottom) {
                @include pos(ab, null, null, 0, 0, $z);
            }
            @else if ($align==right-top) {
                @include pos(ab, 0, 0, null, null, $z);
            }
            @else if ($align==right-bottom) {
                @include pos(ab, null, 0, 0, null, $z);
            }
            margin: auto;
        }
    }
}


@mixin breakPointClass($class) {  // how to use @include breakPointClass(value){ } value=xs,xxs,sm,md,lg,tablet
    @if $class == xs {
      @media (max-width: 767px) { @content; }
    }
   @else if $class == xxs{
      @media (max-width: 420px) { @content; } 
   }
    @else if $class == sm {
      @media (min-width: 768px) { @content; }
    }
   
    @else if $class == md {
      @media (min-width: 992px) { @content; }
    }
   
    @else if $class == lg {
      @media (min-width: 1200px) { @content; }
    }
   @else if $class == tablet{
      @media (min-width:768px) and (max-width:1024px){
          @content;
      }
   }
    @else {
      @warn "supports: xs, sm, md, lg, xxs, tablet";
    }
}




 @mixin buttons($size){
    @if $size == 'md'{
        .btn-primary{
            font-size: 1.4rem;
            padding: 6px 15px;
            min-height: 40px;
        }
    }
    @if $size == 'xs'{
        .btn-primary{
            font-size: 1.4rem;
            padding: 6px 15px;
            min-height: 40px;
        }
    }
    @else{
        .btn-primary{
            font-size: 1.4rem;
            padding: 6px 15px;
            min-height: 40px;
        }
    }
 }

// css for mobile popup
@mixin mobilePopups {
  
    .mweb-popup {
      position: fixed;
      width: 100%;
      height: 100%;
      z-index: 21;
      background: $white;
      top: 0;
      transition: all 0.2s ease-in-out;
      visibility: hidden;
      opacity: 0;
      .mpopup-inner {
          height: 100%;
          position: relative;
          z-index: 22;
      }
      
  }
  @media all and (max-width: 767px){
    .mweb-popup{
        left: 0;
        transform: translateY(10px);
        &.visible {
            visibility: visible;
            opacity: 1;
            transform: translateY(0px);
        }
    }
  }
  .p16,
  .p-top {
      padding: $p16;
  }
  
  .p-bottom,
  .p-top {
      height: 56px;
      width: 100%;
  }
  
  .p-bottom {
      height: auto;
  }
  
  .popup-content {
      height: 100%;
      overflow: auto;
      h2 {
          font-size: 36px;
          font-weight: 700;
          line-height: 1;
          letter-spacing: normal;
      }
  }
  
  .reset {
      font-weight: 700;
      font-size: 1.4rem;
      line-height: 1.43;
  }
  
  .close {
      width: 24px;
      height: 24px;
      cursor: pointer;
  }
  
  button.single {
      width: 100%;
      font-size: 2.0rem;
      line-height: 2.4rem;
      font-weight: 600;
      height: 56px;
      letter-spacing: 0.5px;
  }
  @media all and (min-width: 768px) {
    .mweb-popup {
        background-color: rgba(0,0,0,.3);
        transition: all 0.5s cubic-bezier(0, 0, .2, 1);
        left: 0;
        .mpopup-inner{
            max-width: 440px;
            box-shadow: -10px 0 20px 0 $shadow;
            position: fixed;
            top: 0;
            right: 0;
            overflow: auto;
            background: #fff;
            transition: all 0.5s cubic-bezier(0, 0, .2, 1);
            transform: translateX(500px);
        }
        &.visible {
            visibility: visible;
            opacity: 1;
            .mpopup-inner {
                transform: translateX(0px);
            }
            &:before{
                visibility: visible;
                opacity: 1;
            }
        }
    }
}
}






